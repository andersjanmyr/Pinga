// Generated by CoffeeScript 1.3.3
(function() {
  var SocketResource,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  SocketResource = (function() {

    SocketResource.prototype.resourceMethods = ['create', 'read', 'update', 'delete'];

    function SocketResource(socket, namespace, methods) {
      var name, _i, _len, _ref;
      this.socket = socket;
      this.namespace = namespace;
      this.methods = methods;
      this["delete"] = __bind(this["delete"], this);

      this.update = __bind(this.update, this);

      this.read = __bind(this.read, this);

      this.create = __bind(this.create, this);

      _ref = this.resourceMethods;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        name = _ref[_i];
        this.activateMethod(name);
      }
    }

    SocketResource.prototype.activateMethod = function(name) {
      return this.socket.on("" + this.namespace + ":" + name, this[name]);
    };

    SocketResource.prototype.create = function(data, callback) {
      return this.methods.create(data, function(err, model) {
        callback(err, model);
        return this.socket.emit("" + this.namespace + ":create", model);
      });
    };

    SocketResource.prototype.read = function(data, callback) {
      return this.methods.read(data, callback);
    };

    SocketResource.prototype.update = function(data, callback) {
      return this.methods.update(data, function(err, model) {
        callback(err, model);
        return this.socket.emit("" + this.namespace + "/" + model.id + ":update", model);
      });
    };

    SocketResource.prototype["delete"] = function(data, callback) {
      return this.methods["delete"](data, function(err, model) {
        callback(err, model);
        return this.socket.emit("" + this.namespace + "/" + model.id + ":delete", model);
      });
    };

    return SocketResource;

  })();

  module.exports = SocketResource;

}).call(this);
